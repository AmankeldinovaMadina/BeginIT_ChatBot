import telebot
from telebot import types
import datetime as dt
from openpyxl import load_workbook

bot = telebot.TeleBot('6584233589:AAHMVktC7Ji51ZN_LHqsjnSIss9SK9H2LcE')
dev_id = 6584233589
message_admin = {}
workbook = load_workbook('messages.xlsx')
worksheet = workbook['Sheet1']
count = worksheet.max_row + 1


@bot.message_handler(commands=["start"])
def start(message):
    global count
    chat_id = message.chat.id
    worksheet[f'A{count}'].value = str(dt.datetime.now().date())
    worksheet[f'B{count}'].value = str(dt.datetime.now().time())[0:8]
    worksheet[f'C{count}'].value = f"{message.chat.first_name} {message.chat.last_name}"
    worksheet[f'D{count}'].value = message.chat.username
    
    app_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    app_markup.add(types.KeyboardButton('–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'))
    chat_id = message.chat.id
    first_name = message.chat.first_name
    bot.send_sticker(chat_id, sticker=r'CAACAgIAAxkBAAEImRFkO3MzP7AWT8T1uuATaNRRLJav4gACHwADWbv8Jeo5dBvZPTaZLwQ')
    bot.send_message(chat_id, f"–ü—Ä–∏–≤–µ—Ç {first_name}!\n"
                     f"Welcome to BeginIT!", reply_markup=app_markup)
    
@bot.message_handler(content_types=["text"])
def text(message):
    chat_id = message.chat.id
    if message.chat.type == 'private':
        if message.text == '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è':
            app_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            app_markup.add(types.KeyboardButton('Teacher'))
            app_markup.add(types.KeyboardButton('Student'))
            app_markup.add(types.KeyboardButton('Speaker'))

            bot.send_message(chat_id, "–ö–æ–≥–æ –≤—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ?", reply_markup=app_markup)
            
            bot.register_next_step_handler(message, select_level)


def send_admin(message):
    global count
    worksheet[f"M{count}"].value = message.text
    count += 1
    workbook.save("messages.xlsx")
    message_admin['partner'] = message.text
    first_name = message.chat.first_name
    chat_id = message.chat.id
    user_name = message.chat.username
    app_name, app_username = [], []
    app_name.append(first_name)
    app_username.append(user_name)
    if message_admin['info'] == '–ù–µ—Ç':
        bot.send_message(admin_id, f"–ü—Ä–∏—à–ª–∞ –∑–∞—è–≤–∫–∞ –æ—Ç {message.chat.first_name}!\n\n"
                                f"Username: {app_username[0]}\n"
                                f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {message_admin['who']}\n–£—Ä–æ–≤–µ–Ω—å: {message_admin['level']}\n–ö–æ—Ä–æ—Ç–∫–æ: {message_admin['short_about_event']}\n"
                                f"–î–∞—Ç–∞: {message_admin['date']}\n–°—Å—ã–ª–∫–∞: {message_admin['link']}\n–û—Ö–≤–∞—Ç: {message_admin['size']}\n"
                                f"–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {message_admin['count']}\n–ü–∞—Ä—Ç–Ω–µ—Ä—ã: {message_admin['partner']}")
    if message_admin['info'] == '–î–∞':
        bot.send_message(admin_id, f"–ü—Ä–∏—à–ª–∞ –∑–∞—è–≤–∫–∞!\n\n"
                                f"–æ—Ç: {message.chat.first_name}\n"
                                f"Username: @{app_username[0]}\n"
                                f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {message_admin['who']}\n–£—Ä–æ–≤–µ–Ω—å: {message_admin['level']}\n"
                                f"–ü–∞—Ä—Ç–Ω–µ—Ä—ã: {message_admin['partner']}")
        
    app_name.clear()
    app_username.clear()
    
    bot.send_message(chat_id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å —É—Å–ø–µ—à–Ω—ã–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º BeginIT", reply_markup=types.ReplyKeyboardRemove())
    
def send_dev(message):
    chat_id = message.chat.id
    bot.send_message(dev_id, f"–ü–æ—Å—Ç—É–ø–∏–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞!\n\n"
                            f"–¢–µ–∫—Å—Ç: {message.text}\n\n"
                            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.chat.first_name}\n"
                            f"Username: @{message.chat.username}")
    bot.send_message(chat_id, f"–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º!\n–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å üôè\n\n–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –Ω–∞–ø–∏—à–∏—Ç–µ /start")


@bot.message_handler(content_types=["text"])
def select_level(message):
    global count
    worksheet[f"E{count}"].value = message.text
    message_admin['who'] = message.text
    
    chat_id = message.chat.id
    app_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    app_markup.add(types.KeyboardButton('Group A'), types.KeyboardButton('Group B'),  types.KeyboardButton('Group C'),  types.KeyboardButton('Group D'))
    bot.send_message(chat_id, "Choose your group üìä:", reply_markup=app_markup)
    message_admin['level'] = message.text
    bot.register_next_step_handler(message, select_info)

@bot.message_handler(content_types=["text"])
def select_info(message):
    global count
    worksheet[f'F{count}'].value = message.text
    message_admin['level'] = message.text
    
    chat_id = message.chat.id
    app_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    app_markup.add(types.KeyboardButton('Help'))
    bot.send_message(chat_id, "–ó–∞–¥–∞–Ω–∏–µ 1. ¬´–û—Ö–æ—Ç–∞ –∑–∞ —Å–æ–∫—Ä–æ–≤–∏—â–∞–º–∏¬ª\n–ó–∞–¥–∞–Ω–∏–µ: –ò—Å—Å–ª–µ–¥—É–π—Ç–µ –º–µ—Å—Ç–æ, –Ω–∞–π–¥–∏—Ç–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤—à–µ—Å—Ç–≤–∞. –°–æ–∑–¥–∞–π—Ç–µ –≤ notion —Ñ–æ—Ç–æ-–∫–æ–ª–ª–∞–∂. \n–û—Ü–µ–Ω–∫–∞: –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–ª–ª–∞–∂–∞ –ø–æ–ª—É—á–∞–µ—Ç–µ 7 –∫–æ—à–∫–∞—Ä—á–∏–∫–æ–≤", reply_markup=app_markup)
    bot.register_next_step_handler(message, select_info_yn)
    message_admin['info'] = message.text

@bot.message_handler(content_types=["document", "text"])
def select_info_yn(message):
    global count
    worksheet[f"G{count}"].value = message.text
    message_admin['info'] = message.text
    
    chat_id = message.chat.id
    if message.text == 'Help':
        bot.send_message(chat_id, "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã: –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤—ã —É–≤–∏–¥–µ–ª–∏ –¥–ª—è —Å–µ–±—è? –ß—Ç–æ —É–¥–∏–≤–∏–ª–æ? –ö–∞–∫–∏–µ –≤—ã–≤–æ–¥—ã –≤—ã —Å–¥–µ–ª–∞–ª–∏ –¥–ª—è —Å–µ–±—è? –ö–∞–∫ —ç—Ç–æ –º–æ–∂–µ—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –≤ –±—É–¥—É—â–µ–º?", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, event_date)
    else:
        bot.register_next_step_handler(message, event_date)

@bot.message_handler(content_types=["text"])
def event_date(message):
    global count
    worksheet[f"H{count}"].value = message.text
    message_admin['short_about_event'] = message.text
    
    chat_id = message.chat.id
    bot.send_message(chat_id, "–û—Ç–≤–µ—Ç—å—Ç–µ —á–µ—Ä–µ–∑ —á–∞—Ç-–±–æ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Å–ø–∏–∫–µ—Ä–∞.  ", reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, event_link)

@bot.message_handler(content_types=["text"])
def event_link(message):
    global count
    worksheet[f"I{count}"].value = message.text
    message_admin['date'] = message.text
    
    chat_id = message.chat.id
    app_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    app_markup.add(types.KeyboardButton('Help'))
    bot.send_message(chat_id, "–ó–∞–¥–∞–Ω–∏–µ 6. –ü—Ä–æ–≤–µ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–≤—å—é –æ —Å—Ñ–µ—Ä–µ IT –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è—Ö –±—É–¥—É—â–µ–≥–æ \n–£—Ä–∞! –ü–æ—Ä–∞ –Ω–∞—á–∞—Ç—å –º–∏–Ω–∏-–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ ¬´5 IT –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –±—É–¥—É—â–µ–≥–æ, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Å–ø–∞—Å—Ç–∏ –º–∏—Ä¬ª. \n–û—Ü–µ–Ω–∫–∞ –ø–æ 1 –∫–æ—à–∫–∞—Ä—á–∏–∫—É –∫–∞–∂–¥–æ–º—É –ø—Ä–∏—Å–ª–∞–≤—à–µ–º—É –≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ —á–∞—Ç-–±–æ—Ç", reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, event_size)

@bot.message_handler(content_types=["text"])
def event_size(message):
    global count
    worksheet[f"J{count}"].value = message.text
    message_admin['link'] = message.text
    
    chat_id = message.chat.id
    if message.text == 'Help':
        bot.send_message(chat_id, "–°–ø—Ä–æ—Å–∏ –º–Ω–µ–Ω–∏—è —ç–∫—Å–ø–µ—Ä—Ç–æ–≤, —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —Å–æ–±—Ä–∞–≤—à–∏—Ö—Å—è. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ —Å–ø—Ä–æ—Å–∏—Ç—å: –ö–∞–∫ –¥—É–º–∞–µ—Ç–µ, –Ω–∞—Å–∫–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –±—É–¥—É—Ç –∏–≥—Ä–∞—Ç—å —Ä–æ–ª—å –≤ —Ä–µ—à–µ–Ω–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º? –ö–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –±—É–¥—É—Ç —Å–∞–º—ã–º–∏ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–º–∏ —á–µ—Ä–µ–∑ 30 –ª–µ—Ç?–ö–∞–∫ –±—ã –≤—ã –Ω–∞–∑–≤–∞–ª–∏ —ç—Ç–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏?–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Å–µ—Ö –Ω–∞–±–ª—é–¥–µ–Ω–∏–π –∏ –∏–Ω—Ç–µ—Ä–≤—å—é –Ω–∞–ø–∏—à–∏—Ç–µ, –æ—Ñ–æ—Ä–º–∏—Ç–µ –≤  notion –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ —á–∞—Ç-–±–æ—Ç.", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, event_date)
    else:
       bot.send_message(chat_id, "–û—Ç–≤–µ—Ç—å—Ç–µ —á–µ—Ä–µ–∑ —á–∞—Ç-–±–æ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Å–ø–∏–∫–µ—Ä–∞.", reply_markup=types.ReplyKeyboardRemove())
       bot.register_next_step_handler(message, event_count)

@bot.message_handler(content_types=["text"])
def event_count(message):
    global count
    worksheet[f"K{count}"].value = message.text
    message_admin['size'] = message.text
    
    chat_id = message.chat.id
    app_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    app_markup.add(types.KeyboardButton('–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ'))
    app_markup.add(types.KeyboardButton('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ'))
    app_markup.add(types.KeyboardButton('Help'))
    bot.send_message(chat_id, "–ó–∞–¥–∞–Ω–∏–µ 7.–ü–∏—Ç—á–∏–Ω–≥-–∑–æ–Ω–∞ \n–ê —Ç—ã –ø–æ–º–Ω–∏—à—å –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º–º—ã No code –∏ Digital design, –∫–æ—Ç–æ—Ä—ã–µ –∏–∑—É—á–∞–ª–∏ –≤ BeginIT by inDrive? –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ –∂–µ–ª–∞–Ω–∏—é. –ú–æ–∂–µ—à—å –∑–∞–ø–∏—Ç—á–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ–µ–∫—Ç, –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å 15 –∫–æ—à–∫–∞—Ä—á–∏–∫–æ–≤ ", reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, select_partner)
    
@bot.message_handler(content_types=["document", "text"])
def select_partner(message):
    global count
    if message_admin['info'] == '–ù–µ—Ç':
        worksheet[f"L{count}"].value = message.text
        message_admin['count'] = message.text
    elif message_admin['info'] == '–î–∞':
        bot.send_message(admin_id, f"–ü—Ä–∏—à–ª–∞ –∏–Ω—Ñ–æ—Å–ø—Ä–∞–≤–∫–∞!\n\n"
                                    f"–û—Ç: {message.chat.first_name}\n"
                                    f"Username: @{message.chat.username}")
        
        try:
            bot.send_document(admin_id, message.document.file_id)
        except:
            bot.send_message(admin_id, '–£–ø—Å...üòê\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±—ã–ª –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª')
            
        first_name = message.chat.first_name
        chat_id = message.chat.id
        user_name = message.chat.username
        app_name, app_username = [], []
        app_name.append(first_name)
        app_username.append(user_name)
        app_name.clear()
        app_username.clear()
    
    chat_id = message.chat.id
    app_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    app_markup.add(types.KeyboardButton('Help'))
    bot.send_message(chat_id, "–ó–∞–¥–∞–Ω–∏–µ 8.Who makes inDrive app? \n –û—Ç–≤–µ—Ç—å—Ç–µ —á–µ—Ä–µ–∑ —á–∞—Ç-–±–æ—Ç. \n–û—Ü–µ–Ω–∫–∞ 1 –∫–æ—à–∫–∞—Ä—á–∏–∫ –∑–∞ –≤–æ–ø—Ä–æ—Å", reply_markup=app_markup)
    message_admin['partner'] = message.text
    bot.register_next_step_handler(message, send_admin)


bot.polling(none_stop=True)